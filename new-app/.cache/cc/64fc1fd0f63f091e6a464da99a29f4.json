{"id":"node_modules/@polkadot/types/codec/UInt.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/package.json","includedInParent":true,"mtime":1630947608825},{"name":"./AbstractInt.js","loc":{"line":3,"column":28},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/codec/UInt.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/codec/AbstractInt.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UInt = void 0;\n\nvar _AbstractInt2 = require(\"./AbstractInt.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nvar UInt = /*#__PURE__*/function (_AbstractInt) {\n  _inherits(UInt, _AbstractInt);\n\n  var _super = _createSuper(UInt);\n\n  function UInt() {\n    _classCallCheck(this, UInt);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UInt, null, [{\n    key: \"with\",\n    value: function _with(bitLength, typeName) {\n      return /*#__PURE__*/function (_UInt) {\n        _inherits(_class, _UInt);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, value, bitLength);\n        }\n\n        _createClass(_class, [{\n          key: \"toRawType\",\n          value: function toRawType() {\n            return typeName || _get(_getPrototypeOf(_class.prototype), \"toRawType\", this).call(this);\n          }\n        }]);\n\n        return _class;\n      }(UInt);\n    }\n  }]);\n\n  return UInt;\n}(_AbstractInt2.AbstractInt);\n\nexports.UInt = UInt;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":3,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":4,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":5,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":6,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":7,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":8,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":9,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":10,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":11,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":12,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":13,"column":0}},{"name":"UInt","generated":{"line":46,"column":4},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":15,"column":13}},{"generated":{"line":59,"column":11},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":2}},{"name":"bitLength","generated":{"line":59,"column":26},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":14}},{"generated":{"line":59,"column":35},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":2}},{"name":"typeName","generated":{"line":59,"column":37},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":25}},{"generated":{"line":59,"column":45},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":2}},{"generated":{"line":59,"column":47},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":16,"column":35}},{"generated":{"line":60,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":61,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":63,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":65,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":6}},{"name":"registry","generated":{"line":65,"column":24},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":18}},{"generated":{"line":65,"column":32},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":6}},{"name":"value","generated":{"line":65,"column":34},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":28}},{"generated":{"line":65,"column":39},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":6}},{"generated":{"line":65,"column":41},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"generated":{"line":66,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"generated":{"line":68,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"name":"registry","generated":{"line":68,"column":36},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":19,"column":14}},{"generated":{"line":68,"column":44},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"name":"value","generated":{"line":68,"column":46},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":19,"column":24}},{"generated":{"line":68,"column":51},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"name":"bitLength","generated":{"line":68,"column":53},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":19,"column":31}},{"generated":{"line":68,"column":62},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":18,"column":35}},{"generated":{"line":69,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":20,"column":7}},{"generated":{"line":71,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":72,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":73,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":73,"column":17},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":22,"column":6}},{"generated":{"line":73,"column":38},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":22,"column":18}},{"generated":{"line":74,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":23,"column":8}},{"name":"typeName","generated":{"line":74,"column":19},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":23,"column":15}},{"generated":{"line":74,"column":27},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":23,"column":23}},{"generated":{"line":74,"column":100},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":23,"column":8}},{"generated":{"line":75,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":24,"column":7}},{"generated":{"line":76,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":78,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":79,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"name":"UInt","generated":{"line":79,"column":8},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":25}},{"generated":{"line":79,"column":12},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":17,"column":4}},{"generated":{"line":80,"column":0},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":27,"column":3}},{"name":"AbstractInt","generated":{"line":84,"column":2},"source":"node_modules/@polkadot/types/codec/UInt.js","original":{"line":15,"column":26}}],"sources":{"node_modules/@polkadot/types/codec/UInt.js":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"./AbstractInt.js\";\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class UInt extends AbstractInt {\n  static with(bitLength, typeName) {\n    return class extends UInt {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}"},"lineCount":null}},"error":null,"hash":"ffbe8287a33d52710f91b0d6bee0fb8d","cacheData":{"env":{}}}