{"id":"node_modules/blot/dist/blot.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.js.map","includedInParent":true,"mtime":1630948993948},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.d.ts","includedInParent":true,"mtime":1630930279000},{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/package.json","includedInParent":true,"mtime":1630924903000},{"name":"tslib","loc":{"line":3,"column":24},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/tslib/tslib.es6.js"},{"name":"@polkadot/extension-dapp","loc":{"line":4,"column":33},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/extension-dapp/index.js"},{"name":"./account","loc":{"line":5,"column":50},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/account.js"},{"name":"./interactor","loc":{"line":6,"column":53},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/blot.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/blot/dist/interactor.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst extension_dapp_1 = require(\"@polkadot/extension-dapp\");\nconst account_1 = tslib_1.__importDefault(require(\"./account\"));\nconst interactor_1 = tslib_1.__importDefault(require(\"./interactor\"));\nclass Blot {\n    constructor(provider) {\n        this.extensions = [];\n        this.provider = provider;\n    }\n    enable(dappName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const beforeEnableTime = Date.now();\n            this.extensions = yield extension_dapp_1.web3Enable(dappName);\n            const afterEnableTime = Date.now();\n            if (this.extensions.length === 0) {\n                // TRICK: refactoring web3Enable to handle errors correctly is needed\n                if (afterEnableTime - beforeEnableTime >= 1000) {\n                    throw new Error('request rejected by user');\n                }\n                throw new Error('no extension installed or this page is not allowed to interact with installed extension');\n            }\n        });\n    }\n    getAccounts() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return extension_dapp_1.web3Accounts();\n        });\n    }\n    getInteractor(accountIndex) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const accounts = yield extension_dapp_1.web3Accounts();\n            const account = new account_1.default(accounts[accountIndex]);\n            return new interactor_1.default(this.provider, account);\n        });\n    }\n}\nexports.default = Blot;\n"},"sourceMaps":{"js":{"version":3,"file":"blot.js","sourceRoot":"","sources":["./blot.d.ts"],"names":[],"mappings":";;;AAAA,6DAGiC;AAMjC,gEAA+B;AAC/B,sEAAqC;AAGrC,MAAqB,IAAI;IAIvB,YAAa,QAAyB;QACpC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAC1B,CAAC;IAEK,MAAM,CAAE,QAAgB;;YAC5B,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YACnC,IAAI,CAAC,UAAU,GAAG,MAAM,2BAAU,CAAC,QAAQ,CAAC,CAAA;YAC5C,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAElC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,qEAAqE;gBACrE,IAAI,eAAe,GAAG,gBAAgB,IAAI,IAAI,EAAE;oBAC9C,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;iBAC5C;gBACD,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAA;aAC3G;QACH,CAAC;KAAA;IAEK,WAAW;;YACf,OAAO,6BAAY,EAAE,CAAA;QACvB,CAAC;KAAA;IAEK,aAAa,CAAE,YAAoB;;YACvC,MAAM,QAAQ,GAAG,MAAM,6BAAY,EAAE,CAAA;YACrC,MAAM,OAAO,GAAG,IAAI,iBAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAA;YAEnD,OAAO,IAAI,oBAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC/C,CAAC;KAAA;CACF;AAjCD,uBAiCC","sourcesContent":["import { InjectedExtension, InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\nimport Interactor from './interactor';\nimport NetworkProvider from './provider';\nexport default class Blot {\n    extensions: InjectedExtension[];\n    provider: NetworkProvider;\n    constructor(provider: NetworkProvider);\n    enable(dappName: string): Promise<void>;\n    getAccounts(): Promise<InjectedAccountWithMeta[]>;\n    getInteractor(accountIndex: number): Promise<Interactor>;\n}\n"]}},"error":null,"hash":"b667299eca64c80a31f4a08e3c8c9a5c","cacheData":{"env":{}}}