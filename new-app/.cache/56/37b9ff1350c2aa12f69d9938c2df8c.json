{"id":"node_modules/@polkadot/types/primitive/Type.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/package.json","includedInParent":true,"mtime":1630947608825},{"name":"../create/sanitize.js","loc":{"line":3,"column":25},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/primitive/Type.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/create/sanitize.js"},{"name":"./Text.js","loc":{"line":4,"column":21},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/primitive/Type.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/primitive/Text.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type = void 0;\n\nvar _sanitize = require(\"../create/sanitize.js\");\n\nvar _Text2 = require(\"./Text.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nvar Type = /*#__PURE__*/function (_Text) {\n  _inherits(Type, _Text);\n\n  var _super = _createSuper(Type);\n\n  function Type(registry) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, Type);\n\n    _this = _super.call(this, registry, value);\n\n    _this.setOverride((0, _sanitize.sanitize)(_this.toString()));\n\n    return _this;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  _createClass(Type, [{\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Type';\n    }\n  }]);\n\n  return Type;\n}(_Text2.Text);\n\nexports.Type = Type;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":4,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":5,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":6,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":7,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":8,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":9,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":10,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":11,"column":0}},{"name":"Type","generated":{"line":41,"column":4},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":13,"column":13}},{"generated":{"line":46,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":2}},{"name":"registry","generated":{"line":46,"column":16},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":14}},{"generated":{"line":46,"column":24},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":2}},{"generated":{"line":46,"column":26},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":47,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":49,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"name":"value","generated":{"line":49,"column":8},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":24}},{"generated":{"line":49,"column":13},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":49,"column":84},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":32}},{"generated":{"line":49,"column":86},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":51,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":53,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":15,"column":4}},{"name":"registry","generated":{"line":53,"column":30},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":15,"column":10}},{"generated":{"line":53,"column":38},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":15,"column":4}},{"name":"value","generated":{"line":53,"column":40},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":15,"column":20}},{"generated":{"line":53,"column":45},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":15,"column":4}},{"generated":{"line":55,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":4}},{"name":"setOverride","generated":{"line":55,"column":10},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":9}},{"generated":{"line":55,"column":21},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":4}},{"generated":{"line":55,"column":22},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":21}},{"generated":{"line":55,"column":46},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":30}},{"name":"toString","generated":{"line":55,"column":52},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":35}},{"generated":{"line":55,"column":60},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":30}},{"generated":{"line":55,"column":62},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":21}},{"generated":{"line":55,"column":63},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":16,"column":4}},{"generated":{"line":57,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":14,"column":36}},{"generated":{"line":58,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":17,"column":3}},{"generated":{"line":59,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":18,"column":2}},{"generated":{"line":60,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":20,"column":0}},{"generated":{"line":66,"column":11},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":23,"column":2}},{"generated":{"line":66,"column":32},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":23,"column":14}},{"generated":{"line":67,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":24,"column":4}},{"generated":{"line":67,"column":13},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":24,"column":11}},{"generated":{"line":67,"column":19},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":24,"column":4}},{"generated":{"line":68,"column":0},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":25,"column":3}},{"name":"Text","generated":{"line":72,"column":2},"source":"node_modules/@polkadot/types/primitive/Type.js","original":{"line":13,"column":26}}],"sources":{"node_modules/@polkadot/types/primitive/Type.js":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize } from \"../create/sanitize.js\";\nimport { Text } from \"./Text.js\";\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\nexport class Type extends Text {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride(sanitize(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}"},"lineCount":null}},"error":null,"hash":"0de853131151f62bd14b8b108a984890","cacheData":{"env":{}}}