{"id":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/package.json","includedInParent":true,"mtime":1630947608825},{"name":"./typeToConstructor.js","loc":{"line":3,"column":34},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/codec/utils/typeToConstructor.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapToTypeMap = mapToTypeMap;\n\nvar _typeToConstructor = require(\"./typeToConstructor.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Constructor }`\n */\nfunction mapToTypeMap(registry, input) {\n  return Object.entries(input).reduce(function (output, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        type = _ref2[1];\n\n    output[key] = (0, _typeToConstructor.typeToConstructor)(registry, type);\n    return output;\n  }, {});\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":5,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":6,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":7}},{"name":"mapToTypeMap","generated":{"line":25,"column":9},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":16}},{"generated":{"line":25,"column":21},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":7}},{"name":"registry","generated":{"line":25,"column":22},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":29}},{"generated":{"line":25,"column":30},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":7}},{"name":"input","generated":{"line":25,"column":32},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":39}},{"generated":{"line":25,"column":37},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":7}},{"generated":{"line":25,"column":39},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":8,"column":46}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":2}},{"name":"Object","generated":{"line":26,"column":9},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"generated":{"line":26,"column":15},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":15}},{"name":"entries","generated":{"line":26,"column":16},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":16}},{"generated":{"line":26,"column":23},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"name":"input","generated":{"line":26,"column":24},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":24}},{"generated":{"line":26,"column":29},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"name":"reduce","generated":{"line":26,"column":31},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":31}},{"generated":{"line":26,"column":37},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"generated":{"line":26,"column":38},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":38}},{"name":"output","generated":{"line":26,"column":48},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":39}},{"generated":{"line":26,"column":54},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":38}},{"generated":{"line":26,"column":62},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"generated":{"line":28,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"name":"key","generated":{"line":28,"column":8},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":48}},{"generated":{"line":28,"column":11},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"name":"type","generated":{"line":29,"column":8},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":53}},{"generated":{"line":29,"column":12},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":63}},{"name":"output","generated":{"line":31,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":4}},{"name":"output","generated":{"line":31,"column":4},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":4}},{"generated":{"line":31,"column":10},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":10}},{"name":"key","generated":{"line":31,"column":11},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":11}},{"generated":{"line":31,"column":14},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":10}},{"generated":{"line":31,"column":15},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":4}},{"generated":{"line":31,"column":18},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":18}},{"name":"registry","generated":{"line":31,"column":60},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":36}},{"generated":{"line":31,"column":68},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":18}},{"name":"type","generated":{"line":31,"column":70},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":46}},{"generated":{"line":31,"column":74},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":18}},{"generated":{"line":31,"column":75},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":10,"column":4}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":11,"column":4}},{"name":"output","generated":{"line":32,"column":11},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":11,"column":11}},{"generated":{"line":32,"column":17},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":11,"column":4}},{"generated":{"line":33,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":12,"column":3}},{"generated":{"line":33,"column":3},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"generated":{"line":33,"column":5},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":12,"column":5}},{"generated":{"line":33,"column":7},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":9}},{"generated":{"line":33,"column":8},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":9,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js","original":{"line":13,"column":1}}],"sources":{"node_modules/@polkadot/types/codec/utils/mapToTypeMap.js":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { typeToConstructor } from \"./typeToConstructor.js\";\n/**\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Constructor }`\n */\n\nexport function mapToTypeMap(registry, input) {\n  return Object.entries(input).reduce((output, [key, type]) => {\n    output[key] = typeToConstructor(registry, type);\n    return output;\n  }, {});\n}"},"lineCount":null}},"error":null,"hash":"9b7e791a4978a267ea2ea06f76b082ee","cacheData":{"env":{}}}