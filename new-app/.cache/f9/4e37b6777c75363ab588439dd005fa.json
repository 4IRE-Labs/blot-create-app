{"id":"node_modules/@polkadot/types/primitive/Bytes.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/package.json","includedInParent":true,"mtime":1630947608825},{"name":"@polkadot/util","loc":{"line":3,"column":98},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/primitive/Bytes.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util/index.js"},{"name":"../codec/Raw.js","loc":{"line":4,"column":20},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/primitive/Bytes.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/types/codec/Raw.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bytes = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Raw2 = require(\"../codec/Raw.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Bytes are used for things like on-chain code, so it has a healthy limit\nvar MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\n\nfunction decodeBytesU8a(value) {\n  if (!value.length) {\n    return new Uint8Array();\n  } // handle all other Uint8Array inputs, these do have a length prefix\n\n\n  var _compactFromU8a = (0, _util.compactFromU8a)(value),\n      _compactFromU8a2 = _slicedToArray(_compactFromU8a, 2),\n      offset = _compactFromU8a2[0],\n      length = _compactFromU8a2[1];\n\n  var total = offset + length.toNumber();\n  (0, _util.assert)(length.lten(MAX_LENGTH), function () {\n    return \"Bytes length \".concat(length.toString(), \" exceeds \").concat(MAX_LENGTH);\n  });\n  (0, _util.assert)(total <= value.length, function () {\n    return \"Bytes: required length less than remainder, expected at least \".concat(total, \", found \").concat(value.length);\n  });\n  return value.subarray(offset, total);\n}\n/** @internal */\n\n\nfunction decodeBytes(value) {\n  if (Array.isArray(value) || (0, _util.isString)(value)) {\n    return (0, _util.u8aToU8a)(value);\n  } else if (!(value instanceof _Raw2.Raw) && (0, _util.isU8a)(value)) {\n    // We are ensuring we are not a Raw instance. In the case of a Raw we already have gotten\n    // rid of the length, i.e. new Bytes(new Bytes(...)) will work as expected\n    return decodeBytesU8a(value);\n  }\n\n  return value;\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\n\n\nvar Bytes = /*#__PURE__*/function (_Raw) {\n  _inherits(Bytes, _Raw);\n\n  var _super = _createSuper(Bytes);\n\n  function Bytes(registry, value) {\n    _classCallCheck(this, Bytes);\n\n    return _super.call(this, registry, decodeBytes(value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  _createClass(Bytes, [{\n    key: \"encodedLength\",\n    get: function get() {\n      return this.length + (0, _util.compactToU8a)(this.length).length;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Bytes';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return isBare ? _get(_getPrototypeOf(Bytes.prototype), \"toU8a\", this).call(this, isBare) : (0, _util.compactAddLength)(this);\n    }\n  }]);\n\n  return Bytes;\n}(_Raw2.Raw);\n\nexports.Bytes = Bytes;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":4,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":4,"column":39}},{"generated":{"line":51,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":0}},{"name":"MAX_LENGTH","generated":{"line":51,"column":4},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":6}},{"generated":{"line":51,"column":14},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":16}},{"generated":{"line":51,"column":17},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":19}},{"generated":{"line":51,"column":22},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":24}},{"generated":{"line":51,"column":26},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":19}},{"generated":{"line":51,"column":29},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":31}},{"generated":{"line":51,"column":33},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":6,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":7,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":0}},{"name":"decodeBytesU8a","generated":{"line":54,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":9}},{"generated":{"line":54,"column":23},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":0}},{"name":"value","generated":{"line":54,"column":24},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":24}},{"generated":{"line":54,"column":29},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":0}},{"generated":{"line":54,"column":31},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":31}},{"generated":{"line":55,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":2}},{"generated":{"line":55,"column":6},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":6}},{"name":"value","generated":{"line":55,"column":7},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":7}},{"generated":{"line":55,"column":12},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":12}},{"name":"length","generated":{"line":55,"column":13},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":13}},{"generated":{"line":55,"column":19},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":2}},{"generated":{"line":55,"column":21},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":10,"column":21}},{"generated":{"line":56,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":11,"column":4}},{"generated":{"line":56,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":11,"column":11}},{"name":"Uint8Array","generated":{"line":56,"column":15},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":11,"column":15}},{"generated":{"line":56,"column":25},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":11,"column":11}},{"generated":{"line":56,"column":27},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":11,"column":4}},{"generated":{"line":57,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":12,"column":3}},{"generated":{"line":57,"column":3},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":9,"column":31}},{"generated":{"line":57,"column":4},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":12,"column":4}},{"generated":{"line":60,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"generated":{"line":60,"column":24},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":27}},{"name":"value","generated":{"line":60,"column":50},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":42}},{"generated":{"line":60,"column":55},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":27}},{"generated":{"line":60,"column":56},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"generated":{"line":61,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"generated":{"line":62,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"name":"offset","generated":{"line":62,"column":6},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":9}},{"generated":{"line":62,"column":12},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"generated":{"line":63,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"name":"length","generated":{"line":63,"column":6},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":17}},{"generated":{"line":63,"column":12},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":15,"column":2}},{"generated":{"line":65,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":2}},{"name":"total","generated":{"line":65,"column":6},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":8}},{"generated":{"line":65,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":13}},{"name":"offset","generated":{"line":65,"column":14},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":16}},{"generated":{"line":65,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":22}},{"name":"length","generated":{"line":65,"column":23},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":25}},{"generated":{"line":65,"column":29},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":31}},{"name":"toNumber","generated":{"line":65,"column":30},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":32}},{"generated":{"line":65,"column":38},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":25}},{"generated":{"line":65,"column":40},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":16,"column":2}},{"generated":{"line":66,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":2}},{"name":"length","generated":{"line":66,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":9}},{"generated":{"line":66,"column":26},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":15}},{"name":"lten","generated":{"line":66,"column":27},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":16}},{"generated":{"line":66,"column":31},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":9}},{"name":"MAX_LENGTH","generated":{"line":66,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":21}},{"generated":{"line":66,"column":42},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":9}},{"generated":{"line":66,"column":43},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":2}},{"generated":{"line":66,"column":45},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":34}},{"generated":{"line":67,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":34}},{"name":"length","generated":{"line":67,"column":34},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":56}},{"generated":{"line":67,"column":40},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":62}},{"name":"toString","generated":{"line":67,"column":41},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":63}},{"generated":{"line":67,"column":49},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":56}},{"generated":{"line":67,"column":51},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":34}},{"name":"MAX_LENGTH","generated":{"line":67,"column":73},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":85}},{"generated":{"line":67,"column":83},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":34}},{"generated":{"line":68,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":34}},{"generated":{"line":68,"column":3},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":17,"column":2}},{"generated":{"line":69,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":2}},{"name":"total","generated":{"line":69,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":9}},{"generated":{"line":69,"column":25},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":14}},{"name":"value","generated":{"line":69,"column":29},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":18}},{"generated":{"line":69,"column":34},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":23}},{"name":"length","generated":{"line":69,"column":35},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":24}},{"generated":{"line":69,"column":41},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":2}},{"generated":{"line":69,"column":43},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":32}},{"generated":{"line":70,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":32}},{"name":"total","generated":{"line":70,"column":83},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":103}},{"generated":{"line":70,"column":88},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":32}},{"name":"value","generated":{"line":70,"column":109},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":119}},{"generated":{"line":70,"column":114},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":124}},{"name":"length","generated":{"line":70,"column":115},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":125}},{"generated":{"line":70,"column":121},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":32}},{"generated":{"line":71,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":32}},{"generated":{"line":71,"column":3},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":18,"column":2}},{"generated":{"line":72,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":2}},{"name":"value","generated":{"line":72,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":9}},{"generated":{"line":72,"column":14},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":14}},{"name":"subarray","generated":{"line":72,"column":15},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":15}},{"generated":{"line":72,"column":23},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":9}},{"name":"offset","generated":{"line":72,"column":24},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":24}},{"generated":{"line":72,"column":30},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":9}},{"name":"total","generated":{"line":72,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":32}},{"generated":{"line":72,"column":37},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":9}},{"generated":{"line":72,"column":38},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":19,"column":2}},{"generated":{"line":73,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":20,"column":1}},{"generated":{"line":74,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":21,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":0}},{"name":"decodeBytes","generated":{"line":77,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":9}},{"generated":{"line":77,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":0}},{"name":"value","generated":{"line":77,"column":21},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":21}},{"generated":{"line":77,"column":26},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":0}},{"generated":{"line":77,"column":28},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":24,"column":28}},{"generated":{"line":78,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":2}},{"name":"Array","generated":{"line":78,"column":6},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":6}},{"generated":{"line":78,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":11}},{"name":"isArray","generated":{"line":78,"column":12},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":12}},{"generated":{"line":78,"column":19},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":6}},{"name":"value","generated":{"line":78,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":20}},{"generated":{"line":78,"column":25},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":6}},{"generated":{"line":78,"column":30},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":30}},{"name":"value","generated":{"line":78,"column":50},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":39}},{"generated":{"line":78,"column":55},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":30}},{"generated":{"line":78,"column":56},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":2}},{"generated":{"line":78,"column":58},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":47}},{"generated":{"line":79,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":26,"column":4}},{"generated":{"line":79,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":26,"column":11}},{"name":"value","generated":{"line":79,"column":31},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":26,"column":20}},{"generated":{"line":79,"column":36},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":26,"column":11}},{"generated":{"line":79,"column":37},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":26,"column":4}},{"generated":{"line":80,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":3}},{"generated":{"line":80,"column":3},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":25,"column":2}},{"generated":{"line":80,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":9}},{"generated":{"line":80,"column":13},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":13}},{"name":"value","generated":{"line":80,"column":15},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":15}},{"generated":{"line":80,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":20}},{"name":"Raw","generated":{"line":80,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":32}},{"generated":{"line":80,"column":41},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":13}},{"generated":{"line":80,"column":46},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":40}},{"name":"value","generated":{"line":80,"column":63},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":46}},{"generated":{"line":80,"column":68},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":40}},{"generated":{"line":80,"column":69},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":9}},{"generated":{"line":80,"column":71},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":27,"column":54}},{"generated":{"line":81,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":28,"column":4}},{"generated":{"line":82,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":29,"column":4}},{"generated":{"line":83,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":4}},{"name":"decodeBytesU8a","generated":{"line":83,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":11}},{"generated":{"line":83,"column":25},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":25}},{"name":"value","generated":{"line":83,"column":26},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":26}},{"generated":{"line":83,"column":31},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":25}},{"generated":{"line":83,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":30,"column":4}},{"generated":{"line":84,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":31,"column":3}},{"generated":{"line":86,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":33,"column":2}},{"name":"value","generated":{"line":86,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":33,"column":9}},{"generated":{"line":86,"column":14},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":33,"column":2}},{"generated":{"line":87,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":34,"column":1}},{"generated":{"line":88,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":35,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":36,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":37,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":38,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":39,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":40,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":41,"column":0}},{"name":"Bytes","generated":{"line":97,"column":4},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":44,"column":13}},{"generated":{"line":102,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":2}},{"name":"registry","generated":{"line":102,"column":17},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":14}},{"generated":{"line":102,"column":25},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":2}},{"name":"value","generated":{"line":102,"column":27},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":24}},{"generated":{"line":102,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":2}},{"generated":{"line":102,"column":34},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":31}},{"generated":{"line":103,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":31}},{"generated":{"line":105,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":31}},{"name":"registry","generated":{"line":105,"column":29},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":46,"column":10}},{"generated":{"line":105,"column":37},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":31}},{"name":"decodeBytes","generated":{"line":105,"column":39},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":46,"column":20}},{"generated":{"line":105,"column":50},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":46,"column":31}},{"name":"value","generated":{"line":105,"column":51},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":46,"column":32}},{"generated":{"line":105,"column":56},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":46,"column":31}},{"generated":{"line":105,"column":57},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":45,"column":31}},{"generated":{"line":106,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":47,"column":3}},{"generated":{"line":107,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":48,"column":2}},{"generated":{"line":108,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":49,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":50,"column":0}},{"generated":{"line":114,"column":9},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":53,"column":2}},{"generated":{"line":114,"column":24},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":53,"column":22}},{"generated":{"line":115,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":4}},{"generated":{"line":115,"column":13},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":11}},{"name":"length","generated":{"line":115,"column":18},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":16}},{"generated":{"line":115,"column":24},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":11}},{"generated":{"line":115,"column":27},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":25}},{"generated":{"line":115,"column":51},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":38}},{"name":"length","generated":{"line":115,"column":56},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":43}},{"generated":{"line":115,"column":62},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":25}},{"name":"length","generated":{"line":115,"column":64},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":51}},{"generated":{"line":115,"column":70},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":54,"column":4}},{"generated":{"line":116,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":55,"column":3}},{"generated":{"line":117,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":56,"column":2}},{"generated":{"line":118,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":57,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":58,"column":0}},{"generated":{"line":123,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":61,"column":2}},{"generated":{"line":123,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":61,"column":14}},{"generated":{"line":124,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":62,"column":4}},{"generated":{"line":124,"column":13},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":62,"column":11}},{"generated":{"line":124,"column":20},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":62,"column":4}},{"generated":{"line":125,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":63,"column":3}},{"generated":{"line":126,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":64,"column":2}},{"generated":{"line":127,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":65,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":66,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":67,"column":0}},{"generated":{"line":133,"column":11},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":70,"column":2}},{"name":"isBare","generated":{"line":133,"column":26},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":70,"column":8}},{"generated":{"line":133,"column":32},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":70,"column":2}},{"generated":{"line":133,"column":34},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":70,"column":16}},{"generated":{"line":134,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":4}},{"name":"isBare","generated":{"line":134,"column":13},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":11}},{"generated":{"line":134,"column":19},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":17}},{"name":"isBare","generated":{"line":134,"column":87},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":32}},{"generated":{"line":134,"column":93},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":17}},{"generated":{"line":134,"column":97},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":42}},{"generated":{"line":134,"column":125},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":59}},{"generated":{"line":134,"column":129},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":42}},{"generated":{"line":134,"column":130},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":71,"column":4}},{"generated":{"line":135,"column":0},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":72,"column":3}},{"name":"Raw","generated":{"line":139,"column":2},"source":"node_modules/@polkadot/types/primitive/Bytes.js","original":{"line":44,"column":27}}],"sources":{"node_modules/@polkadot/types/primitive/Bytes.js":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../codec/Raw.js\"; // Bytes are used for things like on-chain code, so it has a healthy limit\n\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\n\nfunction decodeBytesU8a(value) {\n  if (!value.length) {\n    return new Uint8Array();\n  } // handle all other Uint8Array inputs, these do have a length prefix\n\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + length.toNumber();\n  assert(length.lten(MAX_LENGTH), () => `Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  assert(total <= value.length, () => `Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  return value.subarray(offset, total);\n}\n/** @internal */\n\n\nfunction decodeBytes(value) {\n  if (Array.isArray(value) || isString(value)) {\n    return u8aToU8a(value);\n  } else if (!(value instanceof Raw) && isU8a(value)) {\n    // We are ensuring we are not a Raw instance. In the case of a Raw we already have gotten\n    // rid of the length, i.e. new Bytes(new Bytes(...)) will work as expected\n    return decodeBytesU8a(value);\n  }\n\n  return value;\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\n\n\nexport class Bytes extends Raw {\n  constructor(registry, value) {\n    super(registry, decodeBytes(value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.length).length;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Bytes';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? super.toU8a(isBare) : compactAddLength(this);\n  }\n\n}"},"lineCount":null}},"error":null,"hash":"7ce44cec92f95e0e90adcb30679a1714","cacheData":{"env":{}}}