{"id":"node_modules/@polkadot/util-crypto/key/extractSuri.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util-crypto/package.json","includedInParent":true,"mtime":1630947608825},{"name":"@polkadot/util","loc":{"line":3,"column":31},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util-crypto/key/extractSuri.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util/index.js"},{"name":"./extractPath.js","loc":{"line":4,"column":31},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util-crypto/key/extractSuri.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util-crypto/key/extractPath.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyExtractSuri = keyExtractSuri;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _extractPath = require(\"./extractPath.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\n\nfunction keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  var matches = suri.match(RE_CAPTURE);\n  (0, _util.assert)(!(0, _util.isNull)(matches), 'Unable to match provided value to a secret URI');\n\n  var _matches = _slicedToArray(matches, 7),\n      phrase = _matches[1],\n      derivePath = _matches[3],\n      password = _matches[6];\n\n  var _keyExtractPath = (0, _extractPath.keyExtractPath)(derivePath),\n      path = _keyExtractPath.path;\n\n  return {\n    derivePath: derivePath,\n    password: password,\n    path: path,\n    phrase: phrase\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":4,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":5,"column":0}},{"name":"RE_CAPTURE","generated":{"line":24,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":5,"column":6}},{"generated":{"line":24,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":5,"column":16}},{"generated":{"line":24,"column":17},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":5,"column":19}},{"generated":{"line":24,"column":61},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":5,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":6,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":7,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":8,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":7}},{"name":"keyExtractSuri","generated":{"line":29,"column":9},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":16}},{"generated":{"line":29,"column":23},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":7}},{"name":"suri","generated":{"line":29,"column":24},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":31}},{"generated":{"line":29,"column":28},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":7}},{"generated":{"line":29,"column":30},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":10,"column":37}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":11,"column":2}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":2}},{"name":"matches","generated":{"line":31,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":8}},{"generated":{"line":31,"column":13},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":15}},{"name":"suri","generated":{"line":31,"column":16},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":18}},{"generated":{"line":31,"column":20},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":22}},{"name":"match","generated":{"line":31,"column":21},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":23}},{"generated":{"line":31,"column":26},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":18}},{"name":"RE_CAPTURE","generated":{"line":31,"column":27},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":29}},{"generated":{"line":31,"column":37},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":18}},{"generated":{"line":31,"column":38},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":12,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":2}},{"generated":{"line":32,"column":20},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":9}},{"generated":{"line":32,"column":21},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":10}},{"name":"matches","generated":{"line":32,"column":39},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":17}},{"generated":{"line":32,"column":46},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":10}},{"generated":{"line":32,"column":47},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":2}},{"generated":{"line":32,"column":49},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":27}},{"generated":{"line":32,"column":97},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":13,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"name":"matches","generated":{"line":34,"column":32},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":46}},{"generated":{"line":34,"column":39},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"name":"phrase","generated":{"line":35,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":11}},{"generated":{"line":35,"column":12},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"name":"derivePath","generated":{"line":36,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":20}},{"generated":{"line":36,"column":16},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"name":"password","generated":{"line":37,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":34}},{"generated":{"line":37,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":14,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":15,"column":2}},{"generated":{"line":39,"column":24},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":17,"column":6}},{"name":"derivePath","generated":{"line":39,"column":57},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":17,"column":21}},{"generated":{"line":39,"column":67},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":17,"column":6}},{"generated":{"line":39,"column":68},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":15,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":15,"column":2}},{"name":"path","generated":{"line":40,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":16,"column":4}},{"generated":{"line":40,"column":10},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":15,"column":2}},{"name":"path","generated":{"line":40,"column":29},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":16,"column":4}},{"generated":{"line":40,"column":33},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":15,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":9}},{"name":"derivePath","generated":{"line":43,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":19,"column":4}},{"name":"derivePath","generated":{"line":43,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":19,"column":4}},{"generated":{"line":43,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":19,"column":14}},{"name":"derivePath","generated":{"line":43,"column":16},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":19,"column":4}},{"generated":{"line":43,"column":26},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":9}},{"name":"password","generated":{"line":44,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":20,"column":4}},{"name":"password","generated":{"line":44,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":20,"column":4}},{"generated":{"line":44,"column":12},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":20,"column":12}},{"name":"password","generated":{"line":44,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":20,"column":4}},{"generated":{"line":44,"column":22},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":9}},{"name":"path","generated":{"line":45,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":21,"column":4}},{"name":"path","generated":{"line":45,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":21,"column":4}},{"generated":{"line":45,"column":8},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":21,"column":8}},{"name":"path","generated":{"line":45,"column":10},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":21,"column":4}},{"generated":{"line":45,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":9}},{"name":"phrase","generated":{"line":46,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":22,"column":4}},{"name":"phrase","generated":{"line":46,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":22,"column":4}},{"generated":{"line":46,"column":10},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":22,"column":10}},{"name":"phrase","generated":{"line":46,"column":12},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":22,"column":4}},{"generated":{"line":47,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":9}},{"generated":{"line":47,"column":3},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":18,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractSuri.js","original":{"line":24,"column":1}}],"sources":{"node_modules/@polkadot/util-crypto/key/extractSuri.js":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNull } from '@polkadot/util';\nimport { keyExtractPath } from \"./extractPath.js\";\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\n\nexport function keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  const matches = suri.match(RE_CAPTURE);\n  assert(!isNull(matches), 'Unable to match provided value to a secret URI');\n  const [, phrase,, derivePath,,, password] = matches;\n  const {\n    path\n  } = keyExtractPath(derivePath);\n  return {\n    derivePath,\n    password,\n    path,\n    phrase\n  };\n}"},"lineCount":null}},"error":null,"hash":"2a0a18cdfe93296e6c3497058a412989","cacheData":{"env":{}}}