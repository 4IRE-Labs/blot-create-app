{"id":"node_modules/@polkadot/util/array/range.js","dependencies":[{"name":"/Users/ako/DOT/blot-create-app/new-app/package.json","includedInParent":true,"mtime":1630930244233},{"name":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util/package.json","includedInParent":true,"mtime":1630947608754},{"name":"../assert.js","loc":{"line":3,"column":23},"parent":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util/array/range.js","resolved":"/Users/ako/DOT/blot-create-app/new-app/node_modules/@polkadot/util/assert.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayRange = arrayRange;\n\nvar _assert = require(\"../assert.js\");\n\n// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name arrayRange\n * @summary Returns a range of numbers ith the size and the specified offset\n * @description\n * Returns a new array of numbers with the specific size. Optionally, when `startAt`, is provided, it generates the range to start at a specific value.\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayRange } from '@polkadot/util';\n *\n * arrayRange(5); // [0, 1, 2, 3, 4]\n * arrayRange(3, 5); // [5, 6, 7]\n * ```\n */\nfunction arrayRange(size) {\n  var startAt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  (0, _assert.assert)(size > 0, 'Expected non-zero, positive number as a range size');\n  return new Array(size).fill(0).map(function (_, i) {\n    return i + startAt;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":7}},{"name":"arrayRange","generated":{"line":28,"column":9},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":16}},{"generated":{"line":28,"column":19},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":7}},{"name":"size","generated":{"line":28,"column":20},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":27}},{"generated":{"line":28,"column":24},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":7}},{"generated":{"line":28,"column":26},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":46}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":46}},{"name":"startAt","generated":{"line":29,"column":6},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":33}},{"generated":{"line":29,"column":13},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":46}},{"generated":{"line":29,"column":84},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":43}},{"generated":{"line":29,"column":85},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":20,"column":46}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":2}},{"name":"size","generated":{"line":30,"column":22},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":9}},{"generated":{"line":30,"column":26},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":13}},{"generated":{"line":30,"column":29},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":16}},{"generated":{"line":30,"column":30},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":2}},{"generated":{"line":30,"column":32},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":19}},{"generated":{"line":30,"column":84},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":21,"column":2}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":2}},{"generated":{"line":31,"column":9},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"name":"Array","generated":{"line":31,"column":13},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":13}},{"generated":{"line":31,"column":18},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"name":"size","generated":{"line":31,"column":19},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":19}},{"generated":{"line":31,"column":23},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"name":"fill","generated":{"line":31,"column":25},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":25}},{"generated":{"line":31,"column":29},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"generated":{"line":31,"column":30},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":30}},{"generated":{"line":31,"column":31},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"name":"map","generated":{"line":31,"column":33},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":33}},{"generated":{"line":31,"column":36},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"generated":{"line":31,"column":37},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"name":"_","generated":{"line":31,"column":47},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":38}},{"generated":{"line":31,"column":48},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"name":"i","generated":{"line":31,"column":50},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":41}},{"generated":{"line":31,"column":51},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"name":"i","generated":{"line":32,"column":11},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":47}},{"generated":{"line":32,"column":12},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":48}},{"name":"startAt","generated":{"line":32,"column":15},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":51}},{"generated":{"line":32,"column":22},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"generated":{"line":33,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":37}},{"generated":{"line":33,"column":3},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":9}},{"generated":{"line":33,"column":4},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":22,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/util/array/range.js","original":{"line":23,"column":1}}],"sources":{"node_modules/@polkadot/util/array/range.js":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from \"../assert.js\";\n/**\n * @name arrayRange\n * @summary Returns a range of numbers ith the size and the specified offset\n * @description\n * Returns a new array of numbers with the specific size. Optionally, when `startAt`, is provided, it generates the range to start at a specific value.\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayRange } from '@polkadot/util';\n *\n * arrayRange(5); // [0, 1, 2, 3, 4]\n * arrayRange(3, 5); // [5, 6, 7]\n * ```\n */\n\nexport function arrayRange(size, startAt = 0) {\n  assert(size > 0, 'Expected non-zero, positive number as a range size');\n  return new Array(size).fill(0).map((_, i) => i + startAt);\n}"},"lineCount":null}},"error":null,"hash":"0cd0e555d841773226853f78ffdd91f5","cacheData":{"env":{}}}